// flow-typed signature: caad26b481340957517cb4f98e2329e1
// flow-typed version: 0.7.1

// This is an autogenerated libdef stub for the 'graphql' package.
// Feel free to leave it alone or fill it out as you need.
// If you do fill it out, we encourage you to share it with the community!
// Send pull requests to https://github.com/flowtype/flow-typed
declare module 'graphql' {
  declare module.exports: any;
}

// These are stubs for each file inside the 'graphql' package. They are
// included in case you need to require them directly. Feel free to delete them
// if you don't need them!
declare module 'graphql/error/formatError' {
  declare module.exports: any;
}

declare module 'graphql/error/GraphQLError' {
  declare module.exports: any;
}

declare module 'graphql/error/index' {
  declare module.exports: any;
}

declare module 'graphql/error/locatedError' {
  declare module.exports: any;
}

declare module 'graphql/error/syntaxError' {
  declare module.exports: any;
}

declare module 'graphql/execution/execute' {
  declare module.exports: any;
}

declare module 'graphql/execution/index' {
  declare module.exports: any;
}

declare module 'graphql/execution/values' {
  declare module.exports: any;
}

declare module 'graphql/graphql' {
  declare module.exports: any;
}

declare module 'graphql/index' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/find' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/invariant' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/isNullish' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/keyMap' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/keyValMap' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/quotedOrList' {
  declare module.exports: any;
}

declare module 'graphql/jsutils/suggestionList' {
  declare module.exports: any;
}

declare module 'graphql/language/ast' {
  declare module.exports: any;
}

declare module 'graphql/language/index' {
  declare module.exports: any;
}

declare module 'graphql/language/kinds' {
  declare module.exports: any;
}

declare module 'graphql/language/lexer' {
  declare module.exports: any;
}

declare module 'graphql/language/location' {
  declare module.exports: any;
}

declare module 'graphql/language/parser' {
  declare module.exports: any;
}

declare module 'graphql/language/printer' {
  declare module.exports: any;
}

declare module 'graphql/language/source' {
  declare module.exports: any;
}

declare module 'graphql/language/visitor' {
  declare module.exports: any;
}

declare module 'graphql/type/definition' {
  declare module.exports: any;
}

declare module 'graphql/type/directives' {
  declare module.exports: any;
}

declare module 'graphql/type/index' {
  declare module.exports: any;
}

declare module 'graphql/type/introspection' {
  declare module.exports: any;
}

declare module 'graphql/type/scalars' {
  declare module.exports: any;
}

declare module 'graphql/type/schema' {
  declare module.exports: any;
}

declare module 'graphql/utilities/assertValidName' {
  declare module.exports: any;
}

declare module 'graphql/utilities/astFromValue' {
  declare module.exports: any;
}

declare module 'graphql/utilities/buildASTSchema' {
  declare module.exports: any;
}

declare module 'graphql/utilities/buildClientSchema' {
  declare module.exports: any;
}

declare module 'graphql/utilities/concatAST' {
  declare module.exports: any;
}

declare module 'graphql/utilities/extendSchema' {
  declare module.exports: any;
}

declare module 'graphql/utilities/getOperationAST' {
  declare module.exports: any;
}

declare module 'graphql/utilities/index' {
  declare module.exports: any;
}

declare module 'graphql/utilities/introspectionQuery' {
  declare module.exports: any;
}

declare module 'graphql/utilities/isValidJSValue' {
  declare module.exports: any;
}

declare module 'graphql/utilities/isValidLiteralValue' {
  declare module.exports: any;
}

declare module 'graphql/utilities/schemaPrinter' {
  declare module.exports: any;
}

declare module 'graphql/utilities/separateOperations' {
  declare module.exports: any;
}

declare module 'graphql/utilities/typeComparators' {
  declare module.exports: any;
}

declare module 'graphql/utilities/typeFromAST' {
  declare module.exports: any;
}

declare module 'graphql/utilities/TypeInfo' {
  declare module.exports: any;
}

declare module 'graphql/utilities/valueFromAST' {
  declare module.exports: any;
}

declare module 'graphql/validation/index' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/ArgumentsOfCorrectType' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/DefaultValuesOfCorrectType' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/FieldsOnCorrectType' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/FragmentsOnCompositeTypes' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/KnownArgumentNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/KnownDirectives' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/KnownFragmentNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/KnownTypeNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/LoneAnonymousOperation' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/NoFragmentCycles' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/NoUndefinedVariables' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/NoUnusedFragments' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/NoUnusedVariables' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/OverlappingFieldsCanBeMerged' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/PossibleFragmentSpreads' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/ProvidedNonNullArguments' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/ScalarLeafs' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/UniqueArgumentNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/UniqueFragmentNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/UniqueInputFieldNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/UniqueOperationNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/UniqueVariableNames' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/VariablesAreInputTypes' {
  declare module.exports: any;
}

declare module 'graphql/validation/rules/VariablesInAllowedPosition' {
  declare module.exports: any;
}

declare module 'graphql/validation/specifiedRules' {
  declare module.exports: any;
}

declare module 'graphql/validation/validate' {
  declare module.exports: any;
}

